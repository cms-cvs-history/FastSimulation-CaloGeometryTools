process GeometryTest = {

# empty input service, fire 10 events
    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 1}

service =  RandomNumberGeneratorService {

    # To save the status of the last event (useful for crashes)
    # Just give a name to the file you want the status to be saved
    # otherwise just put saveFileName = ""
    untracked string saveFileName = ""

    # To restore the status of the last event, just un-comment the
    # following line (and comment the saveFileName line!)
    # untracked string restoreFileName = "RandomEngineState.log"

    # To reproduce events using the RandomEngineStateProducer (source
    # excluded), comment the sourceSeed definition, and un-comment 
    # the restoreStateLabel
    # untracked string restoreStateLabel = "randomEngineStateProducer"
    
    # This is to initialize the random engine of the source
    PSet prod = { 
	untracked string engineName = "TRandom3"
	untracked uint32 initialSeed = 123456789
    }
}

   source = EmptySource {}

   include "Geometry/CMSCommonData/data/ecalhcalGeometryXML.cfi"

# Magnetic field full setup

   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

# Calo geometry service model

   include "Geometry/CaloEventSetup/data/CaloGeometry.cff"
   include "Geometry/CaloEventSetup/data/CaloTopology.cfi"

# Calo geometry service model
   include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"

   module prod = testCaloGeometryTools {}

# FastCalorimetry
   include "FastSimulation/Calorimetry/data/Calorimetry.cff"


# timing and memory checks

   service = Timing { }
   service = SimpleMemoryCheck { } 

#provide a scheduler path
   path p1 = { prod }      
}
